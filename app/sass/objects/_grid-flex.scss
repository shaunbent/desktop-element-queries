/*------------------------------------*\
    # GRID
\*------------------------------------*/

/**
 * Grid-like layout system.
 *
 * The layout object provides us with a column-style layout system. This file
 * contains the basic structural elements, but classes should be complemented
 * with width utilities, for example:
 *
 *   <div class="o-grid">
 *     <div class="o-grid__item  u-1/2">
 *     </div>
 *     <div class="o-grid__item  u-1/2">
 *     </div>
 *   </div>
 *
 * The above will create a two-column structure in which each column will
 * fluidly fill half of the width of the parent. We can have more complex
 * systems:
 *
 *   <div class="o-grid">
 *     <div class="o-grid__item  u-1/1  u-1/3@md">
 *     </div>
 *     <div class="o-grid__item  u-1/2  u-1/3@md">
 *     </div>
 *     <div class="o-grid__item  u-1/2  u-1/3@md">
 *     </div>
 *   </div>
 *
 * The above will create a system in which the first item will be 100% width
 * until we enter our medium breakpoint, when it will become 33.333% width. The
 * second and third items will be 50% of their parent, until they also become
 * 33.333% width at the medium breakpoint.
 *
 * We can also manipulate entire layout systems by adding a series of modifiers
 * to the `.o-grid` block. For example:
 *
 *   <div class="o-grid  o-grid--reverse">
 *
 * This will reverse the displayed order of the system so that it runs in the
 * opposite order to our source, effectively flipping the system over.
 *
 *   <div class="o-grid  o-grid--[right|center]">
 *
 * This will cause the system to fill up from either the centre or the right
 * hand side. Default behaviour is to fill up the layout system from the left.
 *
 * There are plenty more options available to us: explore them below.
 */


/**
 * Default/mandatory classes.
 *
 * 1. We need to defensively reset any box-model properties.
 * 2. Allows us to use the layout object on any type of element.
 * 3. Use the negative margin trick for multi-row grids:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */
.o-grid {
    display: flex;
    flex-flow: row wrap;
    margin:  0; /* [1] */
    padding: 0; /* [1] */
    list-style: none; /* [2] */
    margin-left: -16px; /* [3] */
}

/**
 * 1. By default, all layout items are full-width (mobile first).
 * 2. Gutters provided by left padding:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */
.o-grid__item {
    width: 100%; /* [1] */
    padding-left: 16px; /* [2] */

    flex: 0 1 auto;
}


/**
 * Horizontal alignment
 */
.o-grid--center {
  justify-content: center;
}

.o-grid--right {
  justify-content: flex-end;
}

.o-grid--left {
  justify-content: flex-start;
}


/**
 * Vertical alignment
 */
.o-grid--middle {
  align-items: center;
}

.o-grid--bottom {
  align-items: flex-end;
}


/**
 * Content distribution
 */
.o-grid--around {
  justify-content: space-around;
}

.o-grid--between {
  justify-content: space-between;
}

.o-grid--reverse {
  flex-direction: row-reverse;
}

/**
 * No Gutters
 */
.o-grid--flush {
  margin-left: 0;

  & > .o-grid__item {
    padding-left: 0;
  }
}


/**
 * Automatically size items and distribute them equally
 */
.o-grid--auto {
  & > .o-grid__item {
    flex: 1 0 0;
  }
}
