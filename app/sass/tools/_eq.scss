///*------------------------------------*\
//    # EQ
//\*------------------------------------*/

// With the absence of 'Element Queries' as a thing, we've needed to roll our
// own bespoke solution. This involves a bit of JS to calcuate which breakpoint
// we're currently within and setting a data-* which we can then use as a styling
// hook.
//
// The idea behind this mixin is to mask the complexity of the selectors away so
// that developers do not need to have knowledge of how to write these selectors.
// They simply call this mixin within their styles and we'll do the rest.
//
// Hopefully it will be as simple as using a vanilla media query.
//
// .foo {
//   @include eq($from: glue-sm) {
//     display: block;
//   }
//
//   @include eq($until: glue-lg) {
//     display: block;
//   }
//
//   @include eq($from: glue-sm, $until: glue-lg) {
//     display: block;
//   }
// }
//
// @param {String || Boolean} $from  - a breakpoint which styles should apply
//                                     from, think min-width media query
// @param {String || Boolean} $until - a breakpoint which styles should apply
//                                     until, think max-width media query
//
// @author          Shaun Bent

@mixin eq($from: false, $until: false) {
  $query: '';

  // From: this breakpoint (inclusive)
  @if $from {
    $query: '[data-min-width*="#{$from}"]';
  }

  // Until: that breakpoint (exclusive)
  @if $until {
    $query: $query + '[data-max-width*="#{$until}"]';
  }

  // We always want our data-* to be at root level
  @at-root {
    #{$query} #{&} {
      @content;
    }
  }
}
